id: demo
namespace: zoomcamp
description: |
  data used here comes from: https://www.nyc.gov/site/tlc/about/tlc-trip-record-data.page

variables:
  source_file: "green_tripdata_2020-01.parquet"
  csv_file: "green_tripdata_2020-01.csv"
  gcs_file: "gs://{{kv('GCP_BUCKET_NAME')}}/{{vars.csv_file}}"
  data: "{{outputs.convert_parquet_to_csv.outputFiles[vars.csv_file]}}"
  main_table: "{{kv('GCP_PROJECT_ID')}}.{{kv('GCP_DATASET')}}.green_tripdata"
  ext_table: "{{kv('GCP_PROJECT_ID')}}.{{kv('GCP_DATASET')}}.green_tripdata_2020-01_ext"
  tmp_table: "{{kv('GCP_PROJECT_ID')}}.{{kv('GCP_DATASET')}}.green_tripdata_2020-01"
  create_schema_for_main_table_params_dict: '{"table": {{vars.main_table}}}'
  create_ext_table_params_dict: '{"table": {{vars.ext_table}}, "gcs_file": {{vars.gcs_file}}}'
  create_tmp_table_params_dict: '{"table": {{vars.tmp_table}}, "source_file": {{vars.source_file}}, "ext_table": {{vars.ext_table}}}'
  merge_params_dict: '{"main_table": {{vars.main_table}}, "tmp_table": {{vars.tmp_table}}}'

tasks:
  - id: wdir
    type: io.kestra.plugin.core.flow.WorkingDirectory
    tasks:
      - id: clone
        type: io.kestra.plugin.git.Clone
        url: https://github.com/zalexdevon/4_dbt.git

      # - id: extract
      #   type: io.kestra.plugin.scripts.shell.Commands
      #   taskRunner:
      #     type: io.kestra.plugin.core.runner.Process
      #   commands:
      #     - wget -q -O {{render(vars.source_file)}} https://d37ci6vzurychx.cloudfront.net/trip-data/{{render(vars.source_file)}}

      # - id: convert_parquet_to_csv
      #   type: io.kestra.plugin.scripts.python.Commands
      #   beforeCommands:
      #     - pip install pandas pyarrow
      #   outputFiles:
      #     - "*.csv"
      #   commands:
      #     - python demo/convert_parquet_to_csv.py {{ vars.source_file }} {{ vars.csv_file }}

      # - id: upload_to_gcs
      #   type: io.kestra.plugin.gcp.gcs.Upload
      #   from: "{{render(vars.data)}}"
      #   to: "{{render(vars.gcs_file)}}"

      - id: read_sql
        type: io.kestra.plugin.scripts.python.Commands
        beforeCommands:
          - pip install kestra jinja2
        commands:
          - python demo/read_sql.py {{render(vars.create_schema_for_main_table_params_dict)}} "demo/create_schema_for_main_table.sql"
          - python demo/read_sql.py {{render(vars.create_ext_table_params_dict)}} "demo/create_ext_table.sql"
          - python demo/read_sql.py {{render(vars.create_tmp_table_params_dict)}} "demo/create_tmp_table.sql"
          - python demo/read_sql.py {{render(vars.merge_params_dict)}} "demo/merge.sql"

      # - id: create_schema_for_main_table
      #   type: io.kestra.plugin.gcp.bigquery.Query
      #   sql: "{{ outputs.read_sql.vars.create_schema_for_main_table }}"

      # - id: create_ext_table
      #   type: io.kestra.plugin.gcp.bigquery.Query
      #   sql: "{{ outputs.read_sql.vars.create_ext_table }}"

      # - id: create_tmp_table
      #   type: io.kestra.plugin.gcp.bigquery.Query
      #   sql: "{{ outputs.read_sql.vars.create_tmp_table }}"

      # - id: merge
      #   type: io.kestra.plugin.gcp.bigquery.Query
      #   sql: "{{ outputs.read_sql.vars.merge }}"

      # - id: purge_files
      #   type: io.kestra.plugin.core.storage.PurgeCurrentExecutionFiles
      #   description: To avoid cluttering your storage, we will remove the downloaded files

pluginDefaults:
  - type: io.kestra.plugin.gcp
    values:
      serviceAccount: "{{kv('GCP_CREDS')}}"
      projectId: "{{kv('GCP_PROJECT_ID')}}"
      location: "{{kv('GCP_LOCATION')}}"
      bucket: "{{kv('GCP_BUCKET_NAME')}}"
